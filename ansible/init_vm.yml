[sauser@ansible-yumrepo-172_17_0_30 tasks]$ vim init_centos7p.yaml 

---
  - name: Set 8 for minimum password length       # 设置密码长度最小为8位
    shell: authconfig --passminlen=8 --update

  - name: Set 4 for maximum number of allowed consecutive characters of the same class  #允许同一类的最大连续字符数设置4位
    shell: authconfig --passmaxclassrepeat=4 --update

  - name: The parameter is set in a config below  #使能密码中至少包含一个小写字母
    shell: authconfig --enablereqlower --update

  - name: the parameter is set in a config below  #使能密码中至少包含一个大写字母
    shell: authconfig --enablerequpper --update

  - name: the parameter is set in a config below  #使能密码中至少包含一个数字
    shell: authconfig --enablereqdigit --update

  - name: the parameter is set in a config below  #使能密码中至少包含一个特殊字符
    shell: authconfig --enablereqother --update

  - name: Setting the password rules              
    lineinfile: dest=/etc/security/pwquality.conf line={{ item }}
    with_items:
      - 'maxsequence = 4'           # 设置同一类的允许连续字符的最大数目
      - 'difok = 6'                 # 允许的新、旧密码相同字符的个数为6位

  - name: Setting the password duplication strategy   #修改密码不能使用上次密码
      regexp: '^password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok'
      line: 'password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok remember=1'  

  - name: Setting the login policy  #设置账户密码锁定，普通用户密码连续输错6次，账户锁定600秒，root用户锁定60秒
    lineinfile:
      dest: /etc/pam.d/sshd
      regexp: '#%PAM-1.0'
      line: 'auth required pam_tally2.so deny=6 unlock_time=600 even_deny_root root_unlock_time=60'  
      insertafter: '#%PAM-1.0'
      backrefs: yes

  - name: Setting up a common user Su  #开启用户的su
    lineinfile:
      dest: /etc/pam.d/su
      regexp: '^#auth           required        pam_wheel.so use_uid'
      line: 'auth            required        pam_wheel.so use_uid'

  - name: Set wheel group users free of sudo  #开启wheel组的免密sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel  ALL=(ALL)       NOPASSWD: ALL'

  - name: Add the user 'sauser' with a specific uid and a primary group of 'wheel'   #添加sauser用户 uid 2048  加入wheel组  shell为/bin/bash 家目录为 /home/sauser
    user:
      name: sauser
      password: '$6$cYbg7R6j$Q4uARdTl8m9MCx5RtR64xb7yPgZDGqtTsuwU8vYsAY/XloFwnLr8ezTf5eYCmzwm7Tv32PgbtDcFh0KHMZzmh1'
      uid: 2048
      groups: wheel
      shell: /bin/bash
      createhome: yes
      home: /home/sauser
      state: present

  - name: Add the user 'devuser' with a specific uid and a primary group of 'wheel'   #添加devuser用户 uid 2047  加入wheel组  shell为/bin/bash 家目录为 /home/devuser
    user:
      name: devuser
      password: '$6$3JULDzh/$KrVsYViaT3b1l4btL6VdnJdTlcHqP5Bn2Wd.qtZW90q3pQFzpMvJHQbACA7r9Z7S9.ZagRXZVRupbBchcYGFW.'
      uid: 2047
      groups: wheel
      shell: /bin/bash
      createhome: yes
      home: /home/devuser
      state: present

  - name: Setting devuser user sudo permissions    # 设置devuser的sudo权限
    lineinfile:
      dest: /etc/sudoers
      line: 'devuser  ALL=(ALL)        NOPASSWD: ALL,!/bin/su,!/bin/su - root,!/bin/su root,!/usr/bin/passwd root,!/usr/sbin/visudo,!/bin/vi /etc/sudoers,!/usr/bin/vim /etc/sudoers,!/usr/bin/sudo -i,/bin/vi /etc/ssh/*,!/usr/bin/vim /etc/ssh/*,!/bin/chmod 777 /etc/*,!/bin/chmod 777 *,!/bin/chmod 777,!/bin/chmod -R 777 *,!/bin/bash,!/bin/sh,!/bin/tcsh'

  - name: Set root nologin   #禁止root运程登陆
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^#PermitRootLogin'
      line: 'PermitRootLogin no'

  - name: Set sshd DNS       #设置ssh禁止DNS查询
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^#UseDNS'
      line: 'UseDNS no'

  - name: Stop firewalld     #关闭防火墙
    service: name=firewalld state=stopped enabled=no
  
  - name: Shutdwon selinux.  #关闭selinux
    replace: dest=/etc/selinux/config regexp=^SELINUX=enforcing replace=SELINUX=disabled

  - name: Stop postfix       #关闭postfix
    service: name=postfix state=stopped enabled=no

  - name: Mkdir yumrepo direcrtory  #创建yum源文件备份目录 
    file: path=/etc/yum.repos.d/yumrepo.bak state=directory mode=0755

  - name: Backup yum.repo  #备份yum源文件
    shell: mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/yumrepo.bak/
    #ignore_errors: yes

  - name: Configure yum source   #添加新的yum源文件
    get_url:
      url: http://172.17.0.30/CentOS-YUM/Pub/YumRepoFile/CentOS7/CentOS7-Base.repo
      dest: /etc/yum.repos.d/CentOS-Base.repo

  - name: Install base rpm package   #安装初始系统所需基础包
    yum: name={{ item }} state=latest
    with_items:
      - bash-completion-extras.noarch
      - lrzsz
      - nc
      - vim
      - iotop
      - iftop
      - dstat
      - tcpdump
      - ipmitool
      - net-tools
      - libselinux-python
      - iptraf
      - chrony

  - name: Chrony conf   #清空chrony配置文件
    shell: echo '' > /etc/chrony.conf

  - name: Set chrony    #配置chrony时间服务
    lineinfile: dest=/etc/chrony.conf line={{ item }}
    with_items:
      - 'server 10.8.6.11'
      - 'stratumweight 0'
      - 'driftfile /var/lib/chrony/drift'
      - 'rtcsync'
      - 'makestep 10 3'
      - 'bindcmdaddress 127.0.0.1'
      - 'bindcmdaddress ::1'
      - 'keyfile /etc/chrony.keys'
      - 'commandkey 1'
      - 'generatecommandkey'
      - 'noclientlog'
      - 'logchange 0.5'
      - 'logdir /var/log/chrony'
	  
  - name: Start chrony  #启动chrony时间服务
    service: name=chronyd state=started enabled=yes
    tags: chrony

  - name: Change nofile limits.   #设置系统初始软硬限制
    lineinfile: dest=/etc/security/limits.conf line={{ item }}
    with_items:
      - '* - nofile 165535'
      - '* soft nofile 165535'
      - '* hard nofile 165535'
      - '* soft nproc 165535'
      - '* hard nproc 165535'
    tags: limits

  - name: Rm localtime            #删除本地时间配置
    file: path=/etc/localtime state=absent

  - name: Set timezone            #创建本地时间配置为亚洲上海
    file: src=/usr/share/zoneinfo/Asia/Shanghai dest=/etc/localtime state=link

  - name: Set LANG                #配置系统默认字符集
    lineinfile: dest=/etc/locale.conf regexp=^LANG= line=LANG=en_US.UTF-8


  - name: Mkdir ipv6 conf         #修改ipv6配置文件
    shell: echo '' > /etc/modprobe.d/ipv6.conf

  - name: Set ipv6                #关闭ipv6服务
    lineinfile: dest=/etc/modprobe.d/ipv6.conf line={{ item }}
    with_items:
      - 'alias net-pf-10 off'
      - 'alias ipv6 off'
    tags: ipv6

  - name: Set histsize            #设置命令历史纪录条数
    lineinfile:
      dest: /etc/profile
      regexp: '^HISTSIZE='
      line: 'HISTSIZE=10000'

  - name: Mkdir directory         #创建保存历史命令目录
    file: path=/var/log/.history state=directory mode="u=rwx,g=rwx,o=rwx"

  - name: Copy histroy script     #设置保存历史命令
    copy: src=history.sh dest=/etc/profile.d/history.sh owner=root group=root mode="u=rw,g=r,o=r"
 
  - name: Set timeout             #设置终端回话超时时间
    lineinfile:
      dest: /etc/profile
      line: 'export TMOUT=600'
  - name: Soure profile
    shell: source /etc/profile

  - name: Disable ctrl+alt+del reboot    #关闭ctrl+alt+del重启系统
    file:
      path: /usr/lib/systemd/system/ctrl-alt-del.target
      state: absent

  - name: Reload the configuration file  #重新加载配置
    shell: init q

  - name: Update resolv          #修改本地DNS服务器
    lineinfile: dest=/etc/resolv.conf line={{ item }}
    with_items:
      - 'options timeout:1'
      - 'nameserver 10.8.6.10'
      - 'nameserver 10.8.38.10'
      - 'nameserver 172.17.0.10'
    tags: resolv

  - name: Update sysctl          #配置系统内核参数
    lineinfile: dest=/etc/sysctl.conf line={{ item }}
    with_items:
      - 'net.ipv4.tcp_syncookies = 1'
      - 'kernel.core_uses_pid=1'
      - 'kernel.core_pattern=/tmp/core-%e-%p'
      - 'fs.suid_dumpable=2'
      - 'net.ipv4.tcp_tw_reuse=1'
      - 'net.ipv4.tcp_tw_recycle=0'
      - 'net.ipv4.tcp_timestamps=0'
      - 'net.ipv4.ip_forward = 0'
      - 'net.ipv4.conf.all.send_redirects = 0'
      - 'net.ipv4.conf.default.send_redirects = 0'
      - 'net.ipv4.tcp_max_syn_backlog = 1280'
      - 'net.ipv4.icmp_echo_ignore_broadcasts = 1'
      - 'net.ipv4.conf.all.accept_source_route = 0'
      - 'net.ipv4.conf.all.accept_redirects = 0'
      - 'net.ipv4.conf.all.secure_redirects = 0'
      - 'net.ipv4.conf.all.log_martians = 1'
      - 'net.ipv4.conf.default.accept_source_route = 0'
      - 'net.ipv4.conf.default.accept_redirects = 0'
      - 'net.ipv4.conf.default.secure_redirects = 0'
      - 'net.ipv4.icmp_echo_ignore_broadcasts = 1'
      - 'net.ipv4.icmp_ignore_bogus_error_responses = 1'
      - 'net.ipv4.tcp_syncookies = 1'
      - 'net.ipv4.conf.all.rp_filter = 1'
      - 'net.ipv4.conf.default.rp_filter = 1'
      - 'vm.max_map_count=655360'
    tags: sysctl

  - name: Restart sshd          #重启ssh服务
    service: name=sshd state=restarted enabled=yes


八.调整linux描述符
文件描述符是由无符号整数表示的句柄,进程使用它来标识打开的文件.文件描述符与包括相关信息(如文件的打开模式,文件的位置类型,文件的初始类型等)的文件对象相关联,这些信息被称作文件的上下文.文件描述符的有效范围是0到OPEN_MAX.
对于内核而言,所有打开的文件都是通过文件的描述符引用的.当打开一个现有文件或创建一个新文件时,内核向进程返回一个文件描述符,当读或写一个文件时,使用open或create返回的文件描述符标识该文件,并将其作为参数传递给read或write.

查看系统文件描述符设置的情况可以使用下面的命令,文件描述符大小默认是1024.
ulimit -n
对于高并发的业务Linux服务器来说,这个默认的设置值是不够的,需要调整.

调整方法一:
调整系统文件描述符为65535
echo '*        -    nofile    65535' >>/etc/security/limits.conf
tail -l /etc/security/limits.conf

调整方法二:
直接把ulimit -SHn 65535命令加入/etc/rc.d/rc.local,用以设置每次开机启动时配置生效,命令如下:
echo " ulimit -HSn 65535" >>/etc/rc.d/rc.local
echo " ulimit -s 65535" >>/etc/rc.d/rc.local

九.定时清理邮件服务临时目录垃圾文件

centos7默认是安装了Postfix邮件服务的,因此邮件临时存放地点的路径为/var/spool/postfix/maildrop,为了防止目录被垃圾文件填满,导致系统额inode数量不够用,需要定期清理.
定时清理的方法为:将清理命令写成脚本,然后做成定时任务,每日凌晨0点执行一次.

#创建存放脚本的目录
[ -d /server/scripts/shell ] && echo "directory already exists." || mkdir /server/scripts/shell -p

#编写脚本文件
echo 'find /var/spool/postfix/maildrop/ -type f|xargs rm -f' >/server/scripts/shell/del_mail_file.sh

#查看
cat /server/scripts/shell/del_mail_file.sh

#加入计划任务
echo "00 00 * * * /bin/bash /server/scripts/shell/del_mail_file.sh >/dev/null &1" >>/var/spool/cron/root

crontab -l

十.锁定关键系统文件,防止被提权篡改

要锁定关键系统文件,必须对账号密码我那件及启动文件加锁,防止被篡改,加锁命令如下:
chattr +i /etc/passwd /etc/shadow /etc/group /etc/gshadow /etc/inittab
lsattr /etc/passwd /etc/shadow /etc/group /etc/gshadow /etc/inittab

上锁后,所有用户都不能对文件进行修改删除.如果需要修改,可以执行下面的命令解锁后,再进行修改.
chattr -i /etc/passwd /etc/shadow /etc/group /etc/gshadow /etc/inittab
lsattr /etc/passwd /etc/shadow /etc/group /etc/gshadow /etc/inittab

如果想要更加安全,可以把chattr改名转移,防止被黑客利用.
mv /usr/bin/chattr /usr/bin/dm1

十一.ssh限制ip登录

方法一：
只允许指定用户进行登录（白名单）：
在 /etc/ssh/sshd_config 配置文件中设置 AllowUsers 选项，（配置完成需要重启 SSHD 服务）格式如下：
AllowUsers     root@192.168.1.1            
# 允许 IP 192.168.1.1 登录root 通过帐户登录系统。

只拒绝指定用户进行登录（黑名单）：
在/etc/ssh/sshd_config配置文件中设置DenyUsers选项，（配置完成需要重启SSHD服务）格式如下：   
DenyUsers    root@192.168.1.10    #Linux系统账户        
# 拒绝 IP 192.168.1.10 登录root 通过帐户登录系统。

方法二：
#允许192.168.200.0段的IP登录
echo "sshd:192.168.200.0/24:allow"    >>/etc/hosts.allow    
 
 #禁止所有的其他IP段的IP登录
echo "sshd:all:deny"    >>/etc/hosts.deny
hosts.allow 和hosts.deny 两个文件同时设置规则的时候，hosts.allow 文件中的规则优先级高，按照此方法设置后服务器只允许 192.168.200.0/24这个段的 IP 地址的 ssh 登录，其它的 IP 都会拒绝。

方法三：
允许192.168.100.10登录ssh
firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=192.168.100.10 service name=ssh accept'

拒绝192.168.200.0/24登录ssh
firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=192.168.200.0/24 service name=ssh reject'

firewall-cmd --reload

 

十二.为grub菜单加密

为grub菜单加密的目的是防止他人修改grub进行内核等启动设置,以及用单用户模式启动进行破解root密码等操作,实际上此步骤可以在安装系统的过程中设定.
安装系统后的具体设定步骤如下: 

设置密码：
grub2-setpassword

查看设置的密码：
cat /boot/grub2/user.cfg

#在/etc/grub.d/01_users文件中可以看到grub用户名为root，然后通过grub2-setpassword来设置grub的密码，密码设置成功后会生成/boot/grub2/user.cfg文件，可以通过/boot/grub2/user.cfg文件查看设置的密码，查看到的密码为加密的密码。

十三.内核优化

Linux服务器内核参数优化,主要是指在Linux系统中针对业务服务应用而进行的系统内核参数调整,优化并无一定的标准.下面是生产环境下Linux常见的内核优化:

cat >>/etc/sysctl.conf<<EOF
#kernel_flag
#关闭ipv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1

# 避免放大攻击
net.ipv4.icmp_echo_ignore_broadcasts = 1

# 开启恶意icmp错误消息保护
net.ipv4.icmp_ignore_bogus_error_responses = 1

#关闭路由转发
#net.ipv4.ip_forward = 0
#net.ipv4.conf.all.send_redirects = 0
#net.ipv4.conf.default.send_redirects = 0

#开启反向路径过滤
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

#处理无源路由的包
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

#关闭sysrq功能
kernel.sysrq = 0

#core文件名中添加pid作为扩展名
kernel.core_uses_pid = 1

# 开启SYN洪水攻击保护
net.ipv4.tcp_syncookies = 1

#修改消息队列长度
kernel.msgmnb = 65536
kernel.msgmax = 65536

#设置最大内存共享段大小bytes
kernel.shmmax = 68719476736
kernel.shmall = 4294967296

#timewait的数量，默认180000
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.tcp_sack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 4096        87380   4194304
net.ipv4.tcp_wmem = 4096        16384   4194304
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目
net.core.netdev_max_backlog = 262144

#限制仅仅是为了防止简单的DoS 攻击
net.ipv4.tcp_max_orphans = 3276800

#未收到客户端确认信息的连接请求的最大值
net.ipv4.tcp_max_syn_backlog = 262144
net.ipv4.tcp_timestamps = 0

#内核放弃建立连接之前发送SYNACK 包的数量
net.ipv4.tcp_synack_retries = 1

#内核放弃建立连接之前发送SYN 包的数量
net.ipv4.tcp_syn_retries = 1

#启用timewait 快速回收
net.ipv4.tcp_tw_recycle = 1

#开启重用。允许将TIME-WAIT sockets 重新用于新的TCP 连接
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_fin_timeout = 1

#当keepalive 起用的时候，TCP 发送keepalive 消息的频度。缺省是2 小时
net.ipv4.tcp_keepalive_time = 30

#允许系统打开的端口范围
net.ipv4.ip_local_port_range = 1024    65000

#修改防火墙表大小，默认65536
#net.netfilter.nf_conntrack_max=655350
#net.netfilter.nf_conntrack_tcp_timeout_established=1200

# 确保无人能修改路由表
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv4.conf.default.accept_redirects = 0
#net.ipv4.conf.all.secure_redirects = 0
#net.ipv4.conf.default.secure_redirects = 0
EOF
/sbin/sysctl -p

十四.更新系统到最新
#更新补丁并升级系统版本
yum update  -y 

#只更新安全补丁，不升级系统版本
yum --security check-update       #检查是否有安全补丁
yum   update --security           #更新安全补丁
